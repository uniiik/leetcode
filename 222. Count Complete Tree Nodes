/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */



 /*
 first we made a queue and inserted the root element in it,if root is null then return 0 else
 check until the queue becomes empty, if left of temp is not null then insert it into q and same with right pointer.....
 
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        queue<TreeNode*> q;
         q.push(root);
        if(root==NULL)
        {
            return 0;
        }
        
        int count=0;
       
        while(!q.empty())
        {
            TreeNode* temp=q.front();
            q.pop();
            count++;
            if(temp->left!=NULL)
            {
                q.push(temp->left);
            }
            if(temp->right!=NULL)
            {
                q.push(temp->right);
            }



        }
        return count;
        
    }
};
