/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> v;
        queue<TreeNode*> qu;
        
        qu.push(root);
        if(root==NULL)
        {
            return v;
        }

        while(!qu.empty())
        {
            
            int x=qu.size();    //x=size
            vector<int> v1;
            while(x>0){
                TreeNode* front=qu.front();
            qu.pop();
            if(front->left!=NULL)
            {
                qu.push(front->left);
            }
            if(front->right!=NULL)
            {
                qu.push(front->right);
            }
            x--;
            v1.push_back(front->val);
            }
            


  v.push_back(v1);

        }
        
     
        return v;
        
    }
};
